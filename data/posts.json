[
	{
		"title": "How to Create a Layout for BloggerCMS",
		"tags": [
			"bloggercms",
			"layout",
			"template"
		],
		"category": "Tutorial",
		"body": "In the [last post][1], I shared a new layout based on [Responsive][2] template of [Initializr][3]. For the sake of this tutorial, let's see how we can convert this Initializr template into a BloggerCMS layout.\r\n\r\n###What You Need to Know\r\n\r\n - Basics of HTML and CSS\r\n - Basics of [mustache template engine][4] ([see its docs][5]) because *BloggerCMS layouts are based on mustache*. Even if you don't know it, you can follow along still because we show how you can use built-in layout variables to create your custom layout\r\n\r\n###Layout File Structure\r\n\r\nIf you look at the **default** layout folder, it contains these files and folders:\r\n\r\n![enter image description here][6]\r\n\r\nHere is what they mean:\r\n\r\n - **css** - contains all CSS styles for the blog\r\n - **images** - contains all images needed in the layout\r\n - **js** - contains all javascript files needed in the layout\r\n - **partials** - contains mustache partials (similar to PHP include files) such as header, sidebar, footer, etc\r\n - **archive.mustache** - contains archive posts ([Example][7])\r\n - **category.mustache** - contains category posts ([Example][8]) \r\n - **index.mustache** -  contains home page posts ([Example][9])\r\n - **page.mustache** -  contains page posts ([Example][10])\r\n - **post.mustache** -  contains single post ([Example][11])\r\n - **posts.mustache** -  contains all blog posts on single page ([Example][12])\r\n - **tag.mustache** -  contains tag posts ([Example][13])\r\n\r\n> **Note:** We are using **mustache** extension for files so that mustache template engine knows it. This means layout files should have\r\n> mustache extension.\r\n\r\nHere are few things to notice:\r\n\r\n - When creating your custom layouts, you should follow the same naming for all ***.mustache** files present in the layout root folder. For example, you cannot say **myarchive.mustache** for **archive.mustache**.\r\n - Layout must contain a required **partials** folder. Inside **partials** folder, you are not bound with naming convention eg you can name your mustache partials anything like **header.mustache** or **myheader.mustache** - any name you can use.\r\n - BloggerCMS will automatically convert all your .mustache files into .html files\r\n\r\n###Layout Variables\r\n\r\nIn your custom layouts, you can use these mustache template variables:\r\n\r\n**Settings > General**\r\n\r\n - `{{settings}}` - All settings of the blog\r\n - `{{settings.title}}` - Title of the blog\r\n - `{{settings.tagline}}` - Tagline of the blog\r\n - `{{settings.author}}` - Author name of the blog\r\n - `{{settings.url}}` - URL of the blog\r\n - `{{settings.disqus}}` - Disqus shortname for commenting on posts\r\n - `{{settings.analytics}}` - Google Analytics Tracking ID\r\n\r\n**Settings > Follow**\r\n\r\n - `{{follow}}` - All follow data\r\n - `{{follow.twitter}}` - Twitter URL\r\n - `{{follow.linkedin}}` - Linkedin URL\r\n - `{{follow.github}}` - Github URL\r\n - `{{follow.google}}` - Google Plus URL\r\n - `{{follow.facebook}}` - Facebook URL\r\n\r\n**Settings > Custom Values**\r\n\r\n - `{{customValues}}` - All custom values data\r\n - `{{customValues.title}}` - Title of custom value field\r\n - `{{customValues.value}}` - Value of custom value field\r\n\r\n**Posts**\r\n\r\n - `{{posts}}` - All posts of the blog\r\n - `{{homePosts}}` - Home page posts of the blog. It will contain as many posts as defined in **Number of Posts** option in BloggerCMS settings.\r\n - `{{latestPosts}}` - Latest 10 posts\r\n - `{{post}}` - Single post data\r\n - `{{post.title}}` - Title of the post\r\n - `{{post.tags}}` - Tags of the post\r\n - `{{post.category}}` - Category of the post\r\n - `{{post.body}}` - Body of the post\r\n - `{{post.dated}}` - Date post was published on\r\n - `{{post.slug}}` - URL name for the post\r\n\r\n**Pages**\r\n\r\n - `{{pages}` - All pages of the blog\r\n - `{{page}` - Single page data\r\n - `{{page.title}` - Title of page\r\n - `{{page.body}` - Body of the page\r\n - `{{page.slug}` - URL name for the page\r\n\r\n**Categories**\r\n\r\n - `{{categories}}` - All categories of blog posts\r\n - `{{categoryPosts}}` - All posts from a category\r\n\r\n**Archives**\r\n\r\n - `{{archives}}` - All archives of blog posts\r\n - `{{archivePosts}}` - All posts from an archive\r\n\r\n**Tags**\r\n\r\n - `{{tagsCloud}}` - Tags cloud for all posts\r\n - `{{tagPosts}}` - All posts from a tag\r\n\r\n###Creating Partials\r\n\r\nPartials are files that can be included in other files such as header footer or any other piece of html that should appear in all pages of the blog.\r\n\r\nHaving above variables in place, we can easily construct a layout. Let's start.\r\n\r\nGo to [Initializr][14] website and download their [Responsive][15] template by clicking on big orange color button. Once downloaded, extract contents of it and move to **layouts** folder of BloggerCMS. You will see it contains few folders and an **index.html** file.\r\n\r\nFirst step is to create required folder **partials** inside downloaded initialzr folder. Once you have done that, let's create partials for the layout. If you open index.html file of initialzr template in editor of your choice, you would see it contains:\r\n\r\n    <!doctype html>\r\n    <html class=\"no-js\" lang=\"\">\r\n        <head>\r\n            <meta charset=\"utf-8\">\r\n            <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\r\n            <title><\/title>\r\n            <meta name=\"description\" content=\"\">\r\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n    \r\n            <link rel=\"stylesheet\" href=\"css\/normalize.min.css\">\r\n            <link rel=\"stylesheet\" href=\"css\/main.css\">\r\n    \r\n            <script src=\"js\/vendor\/modernizr-2.8.3-respond-1.4.2.min.js\"><\/script>\r\n        <\/head>\r\n        <body>\r\n    \r\n            <div class=\"header-container\">\r\n                <header class=\"wrapper clearfix\">\r\n                    <h1 class=\"title\">h1.title<\/h1>\r\n                    <nav>\r\n                        <ul>\r\n                            <li><a href=\"#\">nav ul li a<\/a><\/li>\r\n                            <li><a href=\"#\">nav ul li a<\/a><\/li>\r\n                            <li><a href=\"#\">nav ul li a<\/a><\/li>\r\n                        <\/ul>\r\n                    <\/nav>\r\n                <\/header>\r\n            <\/div>\r\n    \r\n            <div class=\"main-container\">\r\n                <div class=\"main wrapper clearfix\">\r\n    \r\n                    <article>\r\n                        <header>\r\n                            <h1>article header h1<\/h1>\r\n                            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam sodales urna non odio egestas tempor. Nunc vel vehicula ante. Etiam bibendum iaculis libero, eget molestie nisl pharetra in. In semper consequat est, eu porta velit mollis nec.<\/p>\r\n                        <\/header>\r\n                        <section>\r\n                            <h2>article section h2<\/h2>\r\n                            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam sodales urna non odio egestas tempor. Nunc vel vehicula ante. Etiam bibendum iaculis libero, eget molestie nisl pharetra in. In semper consequat est, eu porta velit mollis nec. Curabitur posuere enim eget turpis feugiat tempor. Etiam ullamcorper lorem dapibus velit suscipit ultrices. Proin in est sed erat facilisis pharetra.<\/p>\r\n                        <\/section>\r\n                        <section>\r\n                            <h2>article section h2<\/h2>\r\n                            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam sodales urna non odio egestas tempor. Nunc vel vehicula ante. Etiam bibendum iaculis libero, eget molestie nisl pharetra in. In semper consequat est, eu porta velit mollis nec. Curabitur posuere enim eget turpis feugiat tempor. Etiam ullamcorper lorem dapibus velit suscipit ultrices. Proin in est sed erat facilisis pharetra.<\/p>\r\n                        <\/section>\r\n                        <footer>\r\n                            <h3>article footer h3<\/h3>\r\n                            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam sodales urna non odio egestas tempor. Nunc vel vehicula ante. Etiam bibendum iaculis libero, eget molestie nisl pharetra in. In semper consequat est, eu porta velit mollis nec. Curabitur posuere enim eget turpis feugiat tempor.<\/p>\r\n                        <\/footer>\r\n                    <\/article>\r\n    \r\n                    <aside>\r\n                        <h3>aside<\/h3>\r\n                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam sodales urna non odio egestas tempor. Nunc vel vehicula ante. Etiam bibendum iaculis libero, eget molestie nisl pharetra in. In semper consequat est, eu porta velit mollis nec. Curabitur posuere enim eget turpis feugiat tempor. Etiam ullamcorper lorem dapibus velit suscipit ultrices.<\/p>\r\n                    <\/aside>\r\n    \r\n                <\/div> <!-- #main -->\r\n            <\/div> <!-- #main-container -->\r\n    \r\n            <div class=\"footer-container\">\r\n                <footer class=\"wrapper\">\r\n                    <h3>footer<\/h3>\r\n                <\/footer>\r\n            <\/div>\r\n    \r\n            <script src=\"\/\/ajax.googleapis.com\/ajax\/libs\/jquery\/1.11.2\/jquery.min.js\"><\/script>\r\n            <script>window.jQuery || document.write('<script src=\"js\/vendor\/jquery-1.11.2.min.js\"><\\\/script>')<\/script>\r\n    \r\n            <script src=\"js\/main.js\"><\/script>\r\n        <\/body>\r\n    <\/html>\r\n\r\nLet's first create **head.mustache** (you can name it anything you want) that will contain head information we would want to inject in all pages of the blog. Create a file head.mustache inside partials folder and in it **cut** following piece of html from index.html file and paste in head.mustache file:\r\n\r\n    <!doctype html>\r\n    <html class=\"no-js\" lang=\"\">\r\n        <head>\r\n            <meta charset=\"utf-8\">\r\n            <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\r\n            <title><\/title>\r\n            <meta name=\"description\" content=\"\">\r\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n    \r\n            <link rel=\"stylesheet\" href=\"css\/normalize.min.css\">\r\n            <link rel=\"stylesheet\" href=\"css\/main.css\">\r\n    \r\n            <script src=\"js\/vendor\/modernizr-2.8.3-respond-1.4.2.min.js\"><\/script>\r\n        <\/head>\r\n\r\nIn above file, let's now fill in `<title><\/title>` tag with blog name and fix javascript and style paths with blog url using **layout variables** shown earlier:\r\n\r\n    <!doctype html>\r\n      <html class=\"no-js\" lang=\"\">\r\n          <head>\r\n              <meta charset=\"utf-8\">\r\n              <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\r\n              <title>{{settings.title}}<\/title>\r\n              <meta name=\"description\" content=\"{{settings.tagline}}\">\r\n              <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n      \r\n              <link rel=\"stylesheet\" href=\"{{settings.url}}\/css\/normalize.min.css\">\r\n              <link rel=\"stylesheet\" href=\"{{settings.url}}\/css\/main.css\">\r\n      \r\n              <script src=\"{{settings.url}}\/js\/vendor\/modernizr-2.8.3-respond-1.4.2.min.js\"><\/script>\r\n          <\/head>\r\n    \r\nSince we cut above head section from index.html file, it should now look like:\r\n    \r\n    <body>\r\n    \r\n        <div class=\"header-container\">\r\n            <header class=\"wrapper clearfix\">\r\n                <h1 class=\"title\">h1.title<\/h1>\r\n                <nav>\r\n                    <ul>\r\n                        <li><a href=\"#\">nav ul li a<\/a><\/li>\r\n                        <li><a href=\"#\">nav ul li a<\/a><\/li>\r\n                        <li><a href=\"#\">nav ul li a<\/a><\/li>\r\n                    <\/ul>\r\n                <\/nav>\r\n            <\/header>\r\n        <\/div>\r\n    \r\n        <div class=\"main-container\">\r\n            <div class=\"main wrapper clearfix\">\r\n    \r\n                <article>\r\n                    <header>\r\n                        <h1>article header h1<\/h1>\r\n                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam sodales urna non odio egestas tempor. Nunc vel vehicula ante. Etiam bibendum iaculis libero, eget molestie nisl pharetra in. In semper consequat est, eu porta velit mollis nec.<\/p>\r\n                    <\/header>\r\n                    <section>\r\n                        <h2>article section h2<\/h2>\r\n                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam sodales urna non odio egestas tempor. Nunc vel vehicula ante. Etiam bibendum iaculis libero, eget molestie nisl pharetra in. In semper consequat est, eu porta velit mollis nec. Curabitur posuere enim eget turpis feugiat tempor. Etiam ullamcorper lorem dapibus velit suscipit ultrices. Proin in est sed erat facilisis pharetra.<\/p>\r\n                    <\/section>\r\n                    <section>\r\n                        <h2>article section h2<\/h2>\r\n                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam sodales urna non odio egestas tempor. Nunc vel vehicula ante. Etiam bibendum iaculis libero, eget molestie nisl pharetra in. In semper consequat est, eu porta velit mollis nec. Curabitur posuere enim eget turpis feugiat tempor. Etiam ullamcorper lorem dapibus velit suscipit ultrices. Proin in est sed erat facilisis pharetra.<\/p>\r\n                    <\/section>\r\n                    <footer>\r\n                        <h3>article footer h3<\/h3>\r\n                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam sodales urna non odio egestas tempor. Nunc vel vehicula ante. Etiam bibendum iaculis libero, eget molestie nisl pharetra in. In semper consequat est, eu porta velit mollis nec. Curabitur posuere enim eget turpis feugiat tempor.<\/p>\r\n                    <\/footer>\r\n                <\/article>\r\n    \r\n                <aside>\r\n                    <h3>aside<\/h3>\r\n                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam sodales urna non odio egestas tempor. Nunc vel vehicula ante. Etiam bibendum iaculis libero, eget molestie nisl pharetra in. In semper consequat est, eu porta velit mollis nec. Curabitur posuere enim eget turpis feugiat tempor. Etiam ullamcorper lorem dapibus velit suscipit ultrices.<\/p>\r\n                <\/aside>\r\n    \r\n            <\/div> <!-- #main -->\r\n        <\/div> <!-- #main-container -->\r\n    \r\n        <div class=\"footer-container\">\r\n            <footer class=\"wrapper\">\r\n                <h3>footer<\/h3>\r\n            <\/footer>\r\n        <\/div>\r\n    \r\n        <script src=\"\/\/ajax.googleapis.com\/ajax\/libs\/jquery\/1.11.2\/jquery.min.js\"><\/script>\r\n        <script>window.jQuery || document.write('<script src=\"js\/vendor\/jquery-1.11.2.min.js\"><\\\/script>')<\/script>\r\n    \r\n        <script src=\"js\/main.js\"><\/script>\r\n    <\/body>\r\n    <\/html>\r\n\r\nLet's now cut header navigation section from initializr index.html file, it you notice it is contained in `<div class=\"header-container\">`. Create a file **partials>header.mustache** and paste:\r\n\r\n    <div class=\"header-container\">\r\n    \t<header class=\"wrapper clearfix\">\r\n    \t\t<h1 class=\"title\">h1.title<\/h1>\r\n    \t\t<nav>\r\n    \t\t\t<ul>\r\n    \t\t\t\t<li><a href=\"#\">nav ul li a<\/a><\/li>\r\n    \t\t\t\t<li><a href=\"#\">nav ul li a<\/a><\/li>\r\n    \t\t\t\t<li><a href=\"#\">nav ul li a<\/a><\/li>\r\n    \t\t\t<\/ul>\r\n    \t\t<\/nav>\r\n    \t<\/header>\r\n    <\/div>\r\n\r\nThe index.html file of initialzr should now appear like:\r\n\r\n    <body>\r\n    \r\n    \t<div class=\"main-container\">\r\n    \t\t<div class=\"main wrapper clearfix\">\r\n    \r\n    \t\t\t<article>\r\n    \t\t\t\t<header>\r\n    \t\t\t\t\t<h1>article header h1<\/h1>\r\n    \t\t\t\t\t<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam sodales urna non odio egestas tempor. Nunc vel vehicula ante. Etiam bibendum iaculis libero, eget molestie nisl pharetra in. In semper consequat est, eu porta velit mollis nec.<\/p>\r\n    \t\t\t\t<\/header>\r\n    \t\t\t\t<section>\r\n    \t\t\t\t\t<h2>article section h2<\/h2>\r\n    \t\t\t\t\t<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam sodales urna non odio egestas tempor. Nunc vel vehicula ante. Etiam bibendum iaculis libero, eget molestie nisl pharetra in. In semper consequat est, eu porta velit mollis nec. Curabitur posuere enim eget turpis feugiat tempor. Etiam ullamcorper lorem dapibus velit suscipit ultrices. Proin in est sed erat facilisis pharetra.<\/p>\r\n    \t\t\t\t<\/section>\r\n    \t\t\t\t<section>\r\n    \t\t\t\t\t<h2>article section h2<\/h2>\r\n    \t\t\t\t\t<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam sodales urna non odio egestas tempor. Nunc vel vehicula ante. Etiam bibendum iaculis libero, eget molestie nisl pharetra in. In semper consequat est, eu porta velit mollis nec. Curabitur posuere enim eget turpis feugiat tempor. Etiam ullamcorper lorem dapibus velit suscipit ultrices. Proin in est sed erat facilisis pharetra.<\/p>\r\n    \t\t\t\t<\/section>\r\n    \t\t\t\t<footer>\r\n    \t\t\t\t\t<h3>article footer h3<\/h3>\r\n    \t\t\t\t\t<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam sodales urna non odio egestas tempor. Nunc vel vehicula ante. Etiam bibendum iaculis libero, eget molestie nisl pharetra in. In semper consequat est, eu porta velit mollis nec. Curabitur posuere enim eget turpis feugiat tempor.<\/p>\r\n    \t\t\t\t<\/footer>\r\n    \t\t\t<\/article>\r\n    \r\n    \t\t\t<aside>\r\n    \t\t\t\t<h3>aside<\/h3>\r\n    \t\t\t\t<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam sodales urna non odio egestas tempor. Nunc vel vehicula ante. Etiam bibendum iaculis libero, eget molestie nisl pharetra in. In semper consequat est, eu porta velit mollis nec. Curabitur posuere enim eget turpis feugiat tempor. Etiam ullamcorper lorem dapibus velit suscipit ultrices.<\/p>\r\n    \t\t\t<\/aside>\r\n    \r\n    \t\t<\/div> <!-- #main -->\r\n    \t<\/div> <!-- #main-container -->\r\n    \r\n    \t<div class=\"footer-container\">\r\n    \t\t<footer class=\"wrapper\">\r\n    \t\t\t<h3>footer<\/h3>\r\n    \t\t<\/footer>\r\n    \t<\/div>\r\n    \r\n    \t<script src=\"\/\/ajax.googleapis.com\/ajax\/libs\/jquery\/1.11.2\/jquery.min.js\"><\/script>\r\n    \t<script>window.jQuery || document.write('<script src=\"js\/vendor\/jquery-1.11.2.min.js\"><\\\/script>')<\/script>\r\n    \r\n    \t<script src=\"js\/main.js\"><\/script>\r\n    <\/body>\r\n    <\/html>\r\n\r\nLet's now create partial for footer. From index.html file cut everything starting from `<div class=\"footer-container\">`:\r\n\r\n    <div class=\"footer-container\">\r\n    \t\t<footer class=\"wrapper\">\r\n    \t\t\t<h3>footer<\/h3>\r\n    \t\t<\/footer>\r\n    \t<\/div>\r\n    \r\n    \t<script src=\"\/\/ajax.googleapis.com\/ajax\/libs\/jquery\/1.11.2\/jquery.min.js\"><\/script>\r\n    \t<script>window.jQuery || document.write('<script src=\"js\/vendor\/jquery-1.11.2.min.js\"><\\\/script>')<\/script>\r\n    \r\n    \t<script src=\"js\/main.js\"><\/script>\r\n    <\/body>\r\n    <\/html>\r\n\r\nSave above in partials>footer.mustache file. Let's now fix paths of javascript files using `{{settings.url}}` variable and save the file:\r\n\r\n    <div class=\"footer-container\">\r\n    \t\t<footer class=\"wrapper\">\r\n    \t\t\t<h3>footer<\/h3>\r\n    \t\t<\/footer>\r\n    \t<\/div>\r\n    \r\n    \t<script src=\"\/\/ajax.googleapis.com\/ajax\/libs\/jquery\/1.11.2\/jquery.min.js\"><\/script>\r\n    \t<script>window.jQuery || document.write('<script src=\"{{settings.url}}js\/vendor\/jquery-1.11.2.min.js\"><\\\/script>')<\/script>\r\n    \r\n    \t<script src=\"{{settings.url}}js\/main.js\"><\/script>\r\n    <\/body>\r\n    <\/html>\r\n\r\nThe index.html file should now look like:\r\n\r\n    <body>\r\n    \r\n    \t<div class=\"main-container\">\r\n    \t\t<div class=\"main wrapper clearfix\">\r\n    \t\t\t<article>\r\n    \t\t\t\t<header>\r\n    \t\t\t\t\t<h1>article header h1<\/h1>\r\n    \t\t\t\t\t<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam sodales urna non odio egestas tempor. Nunc vel vehicula ante. Etiam bibendum iaculis libero, eget molestie nisl pharetra in. In semper consequat est, eu porta velit mollis nec.<\/p>\r\n    \t\t\t\t<\/header>\r\n    \t\t\t\t<section>\r\n    \t\t\t\t\t<h2>article section h2<\/h2>\r\n    \t\t\t\t\t<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam sodales urna non odio egestas tempor. Nunc vel vehicula ante. Etiam bibendum iaculis libero, eget molestie nisl pharetra in. In semper consequat est, eu porta velit mollis nec. Curabitur posuere enim eget turpis feugiat tempor. Etiam ullamcorper lorem dapibus velit suscipit ultrices. Proin in est sed erat facilisis pharetra.<\/p>\r\n    \t\t\t\t<\/section>\r\n    \t\t\t\t<section>\r\n    \t\t\t\t\t<h2>article section h2<\/h2>\r\n    \t\t\t\t\t<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam sodales urna non odio egestas tempor. Nunc vel vehicula ante. Etiam bibendum iaculis libero, eget molestie nisl pharetra in. In semper consequat est, eu porta velit mollis nec. Curabitur posuere enim eget turpis feugiat tempor. Etiam ullamcorper lorem dapibus velit suscipit ultrices. Proin in est sed erat facilisis pharetra.<\/p>\r\n    \t\t\t\t<\/section>\r\n    \t\t\t\t<footer>\r\n    \t\t\t\t\t<h3>article footer h3<\/h3>\r\n    \t\t\t\t\t<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam sodales urna non odio egestas tempor. Nunc vel vehicula ante. Etiam bibendum iaculis libero, eget molestie nisl pharetra in. In semper consequat est, eu porta velit mollis nec. Curabitur posuere enim eget turpis feugiat tempor.<\/p>\r\n    \t\t\t\t<\/footer>\r\n    \t\t\t<\/article>\r\n    \r\n    \t\t\t<aside>\r\n    \t\t\t\t<h3>aside<\/h3>\r\n    \t\t\t\t<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam sodales urna non odio egestas tempor. Nunc vel vehicula ante. Etiam bibendum iaculis libero, eget molestie nisl pharetra in. In semper consequat est, eu porta velit mollis nec. Curabitur posuere enim eget turpis feugiat tempor. Etiam ullamcorper lorem dapibus velit suscipit ultrices.<\/p>\r\n    \t\t\t<\/aside>\r\n    \r\n    \t\t<\/div> <!-- #main -->\r\n    \t<\/div> <!-- #main-container -->\r\n\r\nLet's now create partial for sidebar. You would notice sidebar appears in `<aside>` tag in index.html file. \r\n\r\n    <aside>\r\n      <h3>aside<\/h3>\r\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam sodales urna non odio egestas tempor. Nunc vel vehicula ante. Etiam bibendum iaculis libero, eget molestie nisl pharetra in. In semper consequat est, eu porta velit mollis nec. Curabitur posuere enim eget turpis feugiat tempor. Etiam ullamcorper lorem dapibus velit suscipit ultrices.<\/p>\r\n    <\/aside>\r\n\r\nCut it and paste into new file partials>side.mustache and save the file and the index.html file should now contain:\r\n\r\n    <body>\r\n    \r\n    \t<div class=\"main-container\">\r\n    \t\t<div class=\"main wrapper clearfix\">\r\n    \t\t\t<article>\r\n    \t\t\t\t<header>\r\n    \t\t\t\t\t<h1>article header h1<\/h1>\r\n    \t\t\t\t\t<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam sodales urna non odio egestas tempor. Nunc vel vehicula ante. Etiam bibendum iaculis libero, eget molestie nisl pharetra in. In semper consequat est, eu porta velit mollis nec.<\/p>\r\n    \t\t\t\t<\/header>\r\n    \t\t\t\t<section>\r\n    \t\t\t\t\t<h2>article section h2<\/h2>\r\n    \t\t\t\t\t<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam sodales urna non odio egestas tempor. Nunc vel vehicula ante. Etiam bibendum iaculis libero, eget molestie nisl pharetra in. In semper consequat est, eu porta velit mollis nec. Curabitur posuere enim eget turpis feugiat tempor. Etiam ullamcorper lorem dapibus velit suscipit ultrices. Proin in est sed erat facilisis pharetra.<\/p>\r\n    \t\t\t\t<\/section>\r\n    \t\t\t\t<section>\r\n    \t\t\t\t\t<h2>article section h2<\/h2>\r\n    \t\t\t\t\t<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam sodales urna non odio egestas tempor. Nunc vel vehicula ante. Etiam bibendum iaculis libero, eget molestie nisl pharetra in. In semper consequat est, eu porta velit mollis nec. Curabitur posuere enim eget turpis feugiat tempor. Etiam ullamcorper lorem dapibus velit suscipit ultrices. Proin in est sed erat facilisis pharetra.<\/p>\r\n    \t\t\t\t<\/section>\r\n    \t\t\t\t<footer>\r\n    \t\t\t\t\t<h3>article footer h3<\/h3>\r\n    \t\t\t\t\t<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam sodales urna non odio egestas tempor. Nunc vel vehicula ante. Etiam bibendum iaculis libero, eget molestie nisl pharetra in. In semper consequat est, eu porta velit mollis nec. Curabitur posuere enim eget turpis feugiat tempor.<\/p>\r\n    \t\t\t\t<\/footer>\r\n    \t\t\t<\/article>\r\n    \r\n    \t\t<\/div> <!-- #main -->\r\n    \t<\/div> <!-- #main-container -->\r\n\r\nFrom the index.html file, we see that `<article>` tag is where our posts or pages will go. Create a file partials>article.mustache and paste in it:\r\n\r\n    <header>\r\n      <h1>article header h1<\/h1>\r\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam sodales urna non odio egestas tempor. Nunc vel vehicula ante. Etiam bibendum iaculis libero, eget molestie nisl pharetra in. In semper consequat est, eu porta velit mollis nec.<\/p>\r\n    <\/header>\r\n    <section>\r\n      <h2>article section h2<\/h2>\r\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam sodales urna non odio egestas tempor. Nunc vel vehicula ante. Etiam bibendum iaculis libero, eget molestie nisl pharetra in. In semper consequat est, eu porta velit mollis nec. Curabitur posuere enim eget turpis feugiat tempor. Etiam ullamcorper lorem dapibus velit suscipit ultrices. Proin in est sed erat facilisis pharetra.<\/p>\r\n    <\/section>\r\n\r\nThe index.html should now be:\r\n\r\n    <body>\r\n    \r\n    \t<div class=\"main-container\">\r\n    \t\t<div class=\"main wrapper clearfix\">\r\n    \t\t\t<article>\r\n    \r\n    \t\t\t<\/article>\r\n    \r\n    \t\t<\/div> <!-- #main -->\r\n    \t<\/div> <!-- #main-container -->\r\n\r\nAs you can see we have moved most of the repeatable stuff from index.html file in their own files and that's what index.html file contains in the end. Let's now include our partials we created so far in this index.html file, those should be specified exactly at their locations we cut them from.\r\n\r\nTo include a partial file in other file, you can use `{{> name}}` syntax. For example `{{> head}}` will include **partials\/head.mustache** file into another file. Therefore let's modify index.html file to include all our partials in it:\r\n\r\n    {{> head}}\r\n    \r\n    <body>\r\n    \r\n      {{> header}}\r\n    \r\n      <div class=\"main-container\">\r\n        <div class=\"main wrapper clearfix\">\r\n          <article>\r\n    \r\n          <\/article>\r\n          \r\n          {{> side}}\r\n    \r\n        <\/div> <!-- #main -->\r\n      <\/div> <!-- #main-container -->\r\n      \r\n    {{> footer}}\r\n\r\nNow BloggerCMS will automatically inject all partials in that file and also replace layout variables with their actual values. For example `{{settings.title}}` will be replaced by actual blog title. As noted earlier, mustache template engine only recognizes files with mustache extension, so rename the **index.html** file as **index.mustache** and this will be the home page of the blog.\r\n\r\n\r\n###Creating Layout Files\r\n\r\n**Homepage**\r\n\r\nBy now we already have index.mustache file which will be used for the homepage of the blog. Let's modify it to add blog posts and also include a link to all posts page: (as seen on home of this blog button called **View All Posts**)\r\n\r\n    {{> head}}\r\n    <body>\r\n    \r\n    {{> header}}\r\n    \r\n    <div class=\"main-container\">\r\n        <div class=\"main wrapper clearfix\">\r\n            <article>\r\n                {{#homePosts}}\r\n                    {{> article}}\r\n                {{\/homePosts}}\r\n                <br>\r\n                <a href=\"posts.html\">\u2192 View All Posts<\/a>\r\n            <\/article>\r\n    \r\n            {{> side}}\r\n        <\/div>\r\n        <!-- #main -->\r\n    <\/div>\r\n    <!-- #main-container -->\r\n    \r\n    {{> footer}}\r\n\r\nIn above code, you would notice that:\r\n\r\n    {{#homePosts}}\r\n        {{> article}}\r\n    {{\/homePosts}}\r\n\r\nIf you look at Layout Variables above, we come to now that `{{homePosts}}` contains all posts for the home page. You would notice special characters `#` and `\/` before it. They mark start and end of mustache variable similar to HTML tags. It serves two purposes:\r\n\r\n - Iterate over specified variable data (in this case, home page blog posts)\r\n - Show data only if it is present. If no data will be present in variable,  stuff inside them won't be shown\r\n\r\nSo that's it for the home page.\r\n\r\n**All Posts Page**\r\n\r\nCreate posts.mustache file inside initializr layout folder and paste:\r\n\r\n    {{> head}}\r\n    <body>\r\n    \r\n    {{> header}}\r\n    \r\n    <div class=\"main-container\">\r\n        <div class=\"main wrapper clearfix\">\r\n            <article>\r\n                {{#posts}}\r\n                    {{> article}}\r\n                {{\/posts}}\r\n            <\/article>\r\n    \r\n            {{> side}}\r\n        <\/div>\r\n        <!-- #main -->\r\n    <\/div>\r\n    <!-- #main-container -->\r\n    \r\n    {{> footer}}\r\n\r\nThis time we are using `{{posts}}` variable since it contains all posts of the blog and this **posts.mustache** file will be converted into **posts.html** by BloggerCMS where users will be able to see all blog posts.\r\n\r\n**Archives Page**\r\n\r\nCreate archive.mustache file and paste:\r\n\r\n    {{> head}}\r\n    <body>\r\n    \r\n    {{> header}}\r\n    \r\n    <div class=\"main-container\">\r\n        <div class=\"main wrapper clearfix\">\r\n            <article>\r\n                <h1>Monthly Posts<\/h1>\r\n                <hr\/>\r\n                <br\/>\r\n    \r\n                {{#archivePosts}}\r\n                    {{> article}}\r\n                {{\/archivePosts}}\r\n            <\/article>\r\n    \r\n            {{> side}}\r\n        <\/div>\r\n        <!-- #main -->\r\n    <\/div>\r\n    <!-- #main-container -->\r\n    \r\n    {{> footer}}\r\n\r\nAs noted, archives page data comes from `{{archivePosts}}` variable.\r\n\r\n**Category Page**\r\n\r\nCreate a file category.mustache and paste:\r\n\r\n    {{> head}}\r\n    <body>\r\n    \r\n    {{> header}}\r\n    \r\n    <div class=\"main-container\">\r\n        <div class=\"main wrapper clearfix\">\r\n            <article>\r\n                <h1>Category Posts<\/h1>\r\n                <hr\/>\r\n                <br\/>\r\n    \r\n                {{#categoryPosts}}\r\n                    {{> article}}\r\n                {{\/categoryPosts}}\r\n            <\/article>\r\n    \r\n            {{> side}}\r\n        <\/div>\r\n        <!-- #main -->\r\n    <\/div>\r\n    <!-- #main-container -->\r\n    \r\n    {{> footer}}\r\n\r\n**Tags Page**\r\n\r\nCreate a file tag.mustache and paste:\r\n\r\n    {{> head}}\r\n    <body>\r\n    \r\n    {{> header}}\r\n    \r\n    <div class=\"main-container\">\r\n        <div class=\"main wrapper clearfix\">\r\n            <article>\r\n                <h1>Tag Posts<\/h1>\r\n                <hr\/>\r\n                <br\/>\r\n    \r\n                {{#tagPosts}}\r\n                    {{> article}}\r\n                {{\/tagPosts}}\r\n            <\/article>\r\n    \r\n            {{> side}}\r\n        <\/div>\r\n        <!-- #main -->\r\n    <\/div>\r\n    <!-- #main-container -->\r\n    \r\n    {{> footer}}\r\n\r\n**Page**\r\n\r\nCreate a file page.mustache and paste:\r\n\r\n    {{> head}}\r\n    <body>\r\n    \r\n    {{> header}}\r\n    \r\n        <div class=\"main-container\">\r\n            <div class=\"main wrapper clearfix\">\r\n                <article>\r\n                    <header>\r\n                        <h1>{{page.title}}<\/h1>\r\n                    <\/header>\r\n        \r\n                    <section>\r\n                        <hr>\r\n                        <p class=\"page-content\">{{{page.body}}}<\/p>\r\n                    <\/section>\r\n                <\/article>\r\n        \r\n                {{> side}}\r\n            <\/div>\r\n            <!-- #main -->\r\n        <\/div>\r\n        <!-- #main-container -->\r\n        \r\n        {{> footer}}\r\n\r\nAs noted above in Layout Variables section, `{{page}}` variable contains single page data and hence we can use `{{page.title}}` to get title or `{{page.body}}`\r\n\r\n**Single Post Page**\r\n\r\nCreate a file post.mustache and paste:\r\n\r\n    {{> head}}\r\n    <body>\r\n    \r\n    {{> header}}\r\n    \r\n        <div class=\"main-container\">\r\n            <div class=\"main wrapper clearfix\">\r\n                <article>\r\n                    <header>\r\n                        <h1>{{post.title}}<\/h1>\r\n                    <\/header>\r\n        \r\n                    <section>\r\n                        <hr>\r\n                        <p class=\"page-content\">{{{post.body}}}<\/p>\r\n                    <\/section>\r\n                <\/article>\r\n        \r\n                {{> side}}\r\n            <\/div>\r\n            <!-- #main -->\r\n        <\/div>\r\n        <!-- #main-container -->\r\n        \r\n        {{> footer}}\r\n \r\nBut we also need to add date, category and tags information, so modify it like:\r\n\r\n    {{> head}}\r\n    <body>\r\n    \r\n    {{> header}}\r\n    \r\n    <div class=\"main-container\">\r\n        <div class=\"main wrapper clearfix\">\r\n            <article>\r\n                <header>\r\n                    <h1>{{post.title}}<\/h1>\r\n                    <span class=\"time\">{{post.dated}}<\/span>\r\n                <\/header>\r\n    \r\n                <section>\r\n                    <hr>\r\n                    <p class=\"post-content\">{{{post.body}}}<\/p>\r\n                    <br\/>\r\n    \r\n                    <div class=\"post-info\">\r\n                        {{#post.category}}\r\n                            <strong>Category:<\/strong>\r\n                            <a class=\"lowercase\" href=\"{{settings.url}}\/category\/{{category}}.html\">{{post.category}}<\/a>\r\n                            \u00a0\u00a0\r\n                        {{\/post.category}}\r\n    \r\n                        <strong>Tags:<\/strong>\r\n    \r\n                        {{#post.tags}}\r\n                            <a class=\"lowercase\" href=\"{{settings.url}}\/tag\/{{.}}.html\">{{.}}<\/a>\u00a0\u00a0\r\n                        {{\/post.tags}}\r\n                    <\/div>\r\n                <\/section>\r\n            <\/article>\r\n    \r\n            {{> side}}\r\n        <\/div>\r\n        <!-- #main -->\r\n    <\/div>\r\n    <!-- #main-container -->\r\n    \r\n    {{> footer}}\r\n\r\nYou would notice partials>article.mustache file is used in various files, so let's update it. Modify it so it contains:\r\n\r\n    <header>\r\n        <h1><a href=\"{{settings.url}}\/post\/{{slug}}.html\">{{title}}<\/a><\/h1>\r\n        <span class=\"time\">{{dated}}<\/span>\r\n    <\/header>\r\n    \r\n    {{#showbody}}\r\n        <section>\r\n            <hr>\r\n            <p class=\"post-content\">{{{body}}}<\/p>\r\n            <br\/>\r\n    \r\n            <div class=\"post-info\">\r\n                {{#category}}\r\n                    <strong>Category:<\/strong>\r\n                    <a class=\"lowercase\" href=\"{{settings.url}}\/category\/{{category}}.html\">{{category}}<\/a>\r\n                    \u00a0\u00a0\r\n                {{\/category}}\r\n    \r\n                <strong>Tags:<\/strong>\r\n    \r\n                {{#tags}}\r\n                    <a class=\"lowercase\" href=\"{{settings.url}}\/tag\/{{.}}.html\">{{.}}<\/a>\u00a0\u00a0\r\n                {{\/tags}}\r\n            <\/div>\r\n    \r\n        <\/section>\r\n    {{\/showbody}}\r\n    <hr>\r\n\r\nHere `{{showbody}}` variable is used to dictate whether or not show post body based on **Display Post Titles Only** option in Settings > General Setttings.\r\n\r\nLet's now modify header.mustache file so it show blog name as well as links for created pages:\r\n\r\n    <div class=\"header-container\">\r\n        <header class=\"wrapper clearfix\">\r\n            <h1 class=\"title\">\r\n                <a href=\"{{settings.url}}\/index.html\" class=\"navbar-brand\">{{settings.title}}<\/a>\r\n            <\/h1>\r\n    \r\n            <nav>\r\n                <ul class=\"nav navbar-nav page-links\">\r\n                    {{#pages}}\r\n                        <li><a href=\"{{settings.url}}\/page\/{{slug}}.html\">{{title}}<\/a><\/li>\r\n                    {{\/pages}}\r\n                <\/ul>\r\n            <\/nav>\r\n    \r\n        <\/header>\r\n    <\/div>\r\n\r\nLet's finally update the sidebar so it contains recent posts, categories, archives, tags cloud, follow information and custom values:\r\n\r\n    {{#follow}}\r\n        <aside>\r\n            <h3>Follow Me<\/h3>\r\n    \r\n            <a target=\"_blank\" href=\"{{settings.url}}\/rss.xml\"><img src=\"{{settings.url}}\/img\/rss.png\" width=\"40\" height=\"40\"><\/a>\r\n    \r\n            {{#twitter}}\r\n                <a target=\"_blank\" href=\"{{.}}\"><img src=\"{{settings.url}}\/img\/twitter.png\" width=\"40\" height=\"40\"><\/a>\r\n            {{\/twitter}}\r\n            {{#linkedin}}\r\n                <a target=\"_blank\" href=\"{{.}}\"><img src=\"{{settings.url}}\/img\/linkedin.png\" width=\"40\" height=\"40\"><\/a>\r\n            {{\/linkedin}}\r\n            {{#github}}\r\n                <a target=\"_blank\" href=\"{{.}}\"><img src=\"{{settings.url}}\/img\/github.png\" width=\"40\" height=\"40\"><\/a>\r\n            {{\/github}}\r\n            {{#google}}\r\n                <a target=\"_blank\" href=\"{{.}}\"><img src=\"{{settings.url}}\/img\/google-plus.png\" width=\"40\" height=\"40\"><\/a>\r\n            {{\/google}}\r\n            {{#facebook}}\r\n                <a target=\"_blank\" href=\"{{.}}\"><img src=\"{{settings.url}}\/img\/facebook.png\" width=\"40\" height=\"40\"><\/a>\r\n            {{\/facebook}}\r\n    \r\n        <\/aside>\r\n    {{\/follow}}\r\n    \r\n    {{#customValues}}\r\n        <aside>\r\n            <h3>{{title}}<\/h3>\r\n    \r\n            <p>{{{value}}}<\/p>\r\n        <\/aside>\r\n    {{\/customValues}}\r\n    \r\n    \r\n    <aside>\r\n        <h3>Latest Posts<\/h3>\r\n    \r\n        <ul class=\"list-group\">\r\n            {{#latestPosts}}\r\n                <li><a href=\"{{settings.url}}\/post\/{{slug}}.html\">{{title}}<\/a><\/li>\r\n            {{\/latestPosts}}\r\n        <\/ul>\r\n    <\/aside>\r\n    \r\n    <aside>\r\n        <h3>Categories<\/h3>\r\n    \r\n        <ul class=\"list-group\">\r\n            {{#categories}}\r\n                <li><a class=\"lowercase\" href=\"{{settings.url}}\/category\/{{.}}.html\">{{.}}<\/a><\/li>\r\n            {{\/categories}}\r\n        <\/ul>\r\n    <\/aside>\r\n    \r\n    {{#archives}}\r\n        <aside>\r\n            <h3>Archives<\/h3>\r\n    \r\n            <p>{{{.}}}<\/p>\r\n        <\/aside>\r\n    {{\/archives}}\r\n    \r\n    {{#tagsCloud}}\r\n        <aside>\r\n            <h3>Tags Cloud<\/h3>\r\n    \r\n            <ul class=\"list-inline\">\r\n                {{{.}}}\r\n            <\/ul>\r\n        <\/aside>\r\n    {{\/tagsCloud}}\r\n\r\nAs you can see, we have used various Layout Variables to construct sidebar sections.\r\n\r\n**Few things to notice here:**\r\n\r\n - For follow section, you will need to upload relevant social icon images for twitter, facebook, etc\r\n - To iterate over flat values array, you would use `{{.}}`, this will automatically print current value inside variable\r\n - To show html tags un-escaped, you need to use three curly braces notation eg `{{{.}}}`\r\n - Whole blog data is contained in **admin\/data\/blog.json** file which is then copied into **public\/data\/blog.json** file.\r\n\r\nFinally to apply your new layout, from Settings > General Settings, specify **initializr** as name for the **Layout Name** option and hit the **Generate Blog** button on the top right.\r\n\r\nAnd that concludes the creation of a template, of course explaining each and everything takes bit of time but once you know basics of HTML and [mustache template][16], you should be able to create a layout fast.\r\n\r\n----------\r\n\r\n[**Download This Layout**][17]\r\n\r\n\r\n  [1]: https:\/\/bloggercms.github.io\/post\/new-layout-initializr.html\r\n  [2]: http:\/\/www.initializr.com\/try\r\n  [3]: http:\/\/www.initializr.com\/\r\n  [4]: https:\/\/mustache.github.io\/\r\n  [5]: https:\/\/mustache.github.io\/mustache.5.html\r\n  [6]: https:\/\/bloggercms.github.io\/images\/142857271555264a2b07346.gif\r\n  [7]: http:\/\/bloggercms.github.io\/archive\/april-2015\/\r\n  [8]: https:\/\/bloggercms.github.io\/category\/layouts.html\r\n  [9]: https:\/\/bloggercms.github.io\/index.html\r\n  [10]: https:\/\/bloggercms.github.io\/page\/about.html\r\n  [11]: https:\/\/bloggercms.github.io\/post\/how-to-add-images-to-posts-and-pages.html\r\n  [12]: https:\/\/bloggercms.github.io\/posts.html\r\n  [13]: https:\/\/bloggercms.github.io\/tag\/tutorial.html\r\n  [14]: http:\/\/www.initializr.com\/\r\n  [15]: http:\/\/www.initializr.com\/try\r\n  [16]: https:\/\/mustache.github.io\/\r\n  [17]: https:\/\/bloggercms.github.io\/post\/new-layout-initializr.html",
		"savedraft": "savedraft",
		"dated": "April 09, 2015 11:41 AM",
		"slug": "how-to-create-a-layout-for-bloggercms",
		"status": "publised",
		"addpost": "addpost"
	},
	{
		"title": "New Layout: Initializr",
		"tags": [
			"initializr",
			"layout"
		],
		"category": "Layouts",
		"body": "Here is new layout based on [Responsive][1] template of [Initializr][2] ([see its features][3]) for the BloggerCMS:\r\n\r\n![enter image description here][4]\r\n\r\n\r\n----------\r\n\r\n\r\n## How to Use It ##\r\n\r\n - [Download the layout][5]\r\n - Extract it to **layouts** folder\r\n - Go to *Settings > General Settings* and for the field **Layout Name**, specify its folder name eg **initializr** and that's it.\r\n\r\n> **Note:** You can always change *folder name* for the layout and then specify that as **Layout Name**\r\n\r\n## How was it created ? ##\r\n\r\nSee [How to Create a Layout for BloggerCMS][6]\r\n\r\n\r\n  [1]: http:\/\/www.initializr.com\/try\r\n  [2]: http:\/\/www.initializr.com\/\r\n  [3]: http:\/\/verekia.com\/initializr\/responsive-template\r\n  [4]: https:\/\/bloggercms.github.io\/images\/14285298795525a2d72b648.png\r\n  [5]: https:\/\/bloggercms.github.io\/themes\/initializr.zip\r\n  [6]: https:\/\/bloggercms.github.io\/post\/how-to-create-a-layout-for-bloggercms.html",
		"addpost": "addpost",
		"dated": "April 09, 2015 12:05 AM",
		"slug": "new-layout-initializr",
		"status": "publised"
	},
	{
		"title": "How to Add Images to Posts and Pages",
		"tags": [
			"image",
			"imagemanager",
			"page",
			"post",
			"tutorial"
		],
		"category": "Tutorial",
		"body": "You can use **Image Manager** in BloggerCMS admin interface to add images to your posts as well as pages. Please follow these steps to add an image:\r\n\r\n - Go to Image Manager page\r\n\r\n![enter image description here][1]\r\n\r\n - Select your image and click on the green Upload button\r\n\r\n![enter image description here][2]\r\n\r\n - When you hit the upload button, image will be uploaded in **public\/images** folder and page will refresh. Scroll down and find your image that you just uploaded and copy it's path shown to the right of each image:\r\n\r\n![enter image description here][3]\r\n\r\n - Go to Add Page  or Add Post page and from the editor click on the Image icon or press <kbd>Ctrl + G<\/kbd> and you would see a dialog box asking for image path, paste the image path that you copied in previous step and that's it, image will be shown in live preview below the editor:\r\n\r\n![enter image description here][4]\r\n\r\n\r\n  [1]: https:\/\/bloggercms.github.io\/images\/1428516963552570634aff2.gif\r\n  [2]: https:\/\/bloggercms.github.io\/images\/1428516967552570678d937.gif\r\n  [3]: https:\/\/bloggercms.github.io\/images\/1428517370552571fa88926.gif\r\n  [4]: https:\/\/bloggercms.github.io\/images\/14285176465525730e530cc.gif",
		"savedraft": "savedraft",
		"dated": "April 08, 2015 08:28 PM",
		"slug": "how-to-add-images-to-posts-and-pages",
		"status": "publised",
		"addpost": "addpost"
	},
	{
		"title": "How to Add Disqus Commenting to Posts",
		"tags": [
			"disqus",
			"post",
			"tutorial"
		],
		"category": "Tutorial",
		"body": "If you notice, under each post on this blog there is Comments section powered by excellent [Disqus][1]:\r\n\r\n![enter image description here][2]\r\n\r\n\r\n----------\r\n\r\n\r\nTo add Disqus commenting to your blog, please follow these steps:\r\n\r\n - [Create an account on Disqus][3]\r\n - Once you have registered, login and then go to [Add Disqus to your site][4] page and fill in the details of your blog\r\n\r\n![enter image description here][5]\r\n\r\nOn the next page, choose **Universal Code** option:\r\n\r\n![enter image description here][6]\r\n\r\nThey would give you bunch of code like:\r\n\r\n    <div id=\"disqus_thread\"><\/div>\r\n    <script type=\"text\/javascript\">\r\n        \/* * * CONFIGURATION VARIABLES * * *\/\r\n        var disqus_shortname = 'bloggercms';\r\n        \r\n        \/* * * DON'T EDIT BELOW THIS LINE * * *\/\r\n        (function() {\r\n            var dsq = document.createElement('script'); dsq.type = 'text\/javascript'; dsq.async = true;\r\n            dsq.src = '\/\/' + disqus_shortname + '.disqus.com\/embed.js';\r\n            (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\r\n        })();\r\n    <\/script>\r\n    <noscript>Please enable JavaScript to view the <a href=\"https:\/\/disqus.com\/?ref_noscript\" rel=\"nofollow\">comments powered by Disqus.<\/a><\/noscript>\r\n\r\nFrom that code, we are only interested in **disqus_shortname**. In above code it appears here:\r\n\r\n    var disqus_shortname = 'bloggercms';\r\n\r\nIn this case, our shortname is **bloggercms** (in your case, it will be different) which is all we need not whole code. We need to update this shortname (bloggercms) in BloggerCMS settings page to enable Disqus commenting.\r\n\r\nGo to Settings page and on General Settings tab specify your Disqus unique\/shortname for the **Disqus Shortname** field and hit Update button:\r\n\r\n![enter image description here][7]\r\n\r\nAnd that's it, your all posts will now have Disqus commenting below them. \r\n\r\n*Note: Make sure to update your blog through Generate Blog button on the top.*\r\n\r\n----------\r\n\r\n## Adding Disqus to Custom BloggerCMS Layouts ##\r\n\r\nIf you want create custom layout for BloggerCMS and want to add Disqus commenting, just put below snippet at appropriate place in post.mustache file:\r\n\r\n    <!-- Comment form -->\r\n    <div class=\"well\">\r\n        <div id=\"disqus_thread\"><\/div>\r\n        <script type=\"text\/javascript\">\r\n            var disqus_shortname = '{{settings.disqus}}'; \/\/ required: replace example with your forum shortname\r\n            \/* * * DON'T EDIT BELOW THIS LINE * * *\/\r\n            (function () {\r\n                var dsq = document.createElement('script');\r\n                dsq.type = 'text\/javascript';\r\n                dsq.async = true;\r\n                dsq.src = '\/\/' + disqus_shortname + '.disqus.com\/embed.js';\r\n                (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\r\n            })();\r\n        <\/script>\r\n        <noscript>Please enable JavaScript to view the <a href=\"http:\/\/disqus.com\/?ref_noscript\">Comments\r\n            powered by Disqus.<\/a><\/noscript>\r\n        <a href=\"http:\/\/disqus.com\" class=\"dsq-brlink\">Comments powered by\r\n            <span class=\"logo-disqus\">Disqus<\/span><\/a>\r\n    <\/div>\r\n\r\n  [1]: https:\/\/disqus.com\/\r\n  [2]: https:\/\/bloggercms.github.io\/images\/142843076855241fb037206.gif\r\n  [3]: https:\/\/disqus.com\/\r\n  [4]: https:\/\/disqus.com\/admin\/create\/\r\n  [5]: https:\/\/bloggercms.github.io\/images\/14284312345524218240bc8.png\r\n  [6]: https:\/\/bloggercms.github.io\/images\/1428431430552422464a84a.gif\r\n  [7]: https:\/\/bloggercms.github.io\/images\/14284319185524242e2c2cd.gif",
		"addpost": "addpost",
		"dated": "April 07, 2015 07:52 PM",
		"slug": "how-to-add-disqus-commenting-to-posts",
		"status": "publised"
	},
	{
		"title": "Introducing BloggerCMS !",
		"tags": [
			"admin",
			"bloggercms",
			"cms",
			"intro",
			"php"
		],
		"category": "BloggerCMS",
		"body": "## Introduction ##\r\n\r\nBloggerCMS is a CMS made in PHP that helps you create truly static blogs via provided admin panel interface; you don't need to create blog posts manually in text files or knowing [Markdown][1] syntax unlike other static site generators which is time-consuming. The created blogs become fully portable without any dependencies such as database or any other complicated setups. All data of the blog gets stored in human readable JSON format. The web-based interface (admin panel) makes it very easy even for beginners to create and manage the blog. \r\n\r\nTo deploy your blog, all you need is upload the static blog generated by BloggerCMS to your web host and see it in action. You don't need any server-side language support or database on your hosting provider because everything generated by BloggerCMS is pure HTML. You can also host your blog on [Github][2] (this blog demo runs on github), [Dropbox][3] or any other service you like. The good thing is that you can easily backup your blog too because it's just a folder containing your blog. \r\n\r\nBloggerCMS comes with fully responsive blog template based on famous [Twitter Bootstrap][4] with quite few themes to choose from. You can also create your own blog layouts, all you need to know is HTML and basics of [Mustache][5] template engine.\r\n\r\n## Features ##\r\n\r\n - **Graphical User Interface** - manage your site via a browser\r\n - **File-based** - no database required\r\n - **Truly Static** - no server-side languages needed\r\n - **Portability** - copy, move, backup or version control your site easily\r\n - **Integrated Markdown Editor** - no need to know Markdown\r\n - **Built-in Images Manager**\r\n - **Disqus Commenting System**\r\n - **Search Posts Feature**\r\n - **Responsive Layout** - get started easily with the included responsive layout\r\n - **RSS Support**\r\n - **Sitemap Support**\r\n - **Google Analytics**\r\n - **Code Highlight Support**\r\n - **Tags Cloud Support**\r\n - **Social Follow Section**\r\n - **Categories Section**\r\n - **Archives Section**\r\n \r\n## Screenshots ##\r\n\r\nAlthough, you can create your own custom layouts but here are screenshots for **default** layout with different themes:\r\n\r\n![Default Theme][6]\r\n\r\n![Darkly Theme][7]\r\n\r\n![Journal Theme][8]\r\n\r\n![Slate Theme][9]\r\n\r\n![Yeti Theme][10]\r\n\r\n![Superhere Theme][11]\r\n\r\n\r\n----------\r\n\r\n\r\n...and here are some of the screenshots for administration interface:\r\n\r\n![Dashboard][12]\r\n\r\n![Add Post][13]\r\n\r\n![View Posts][14]\r\n\r\n![Categories][15]\r\n\r\n![Tags][18]\r\n\r\n![Images Manager][16]\r\n\r\n\r\n----------\r\n\r\n\r\n## Getting Started ##\r\n\r\n[Read Getting Started Guide][17]\r\n\r\n\r\n  [1]: http:\/\/en.wikipedia.org\/wiki\/Markdown\r\n  [2]: https:\/\/pages.github.com\/\r\n  [3]: http:\/\/www.dropboxwiki.com\/tips-and-tricks\/host-websites-with-dropbox\r\n  [4]: http:\/\/getbootstrap.com\/\r\n  [5]: https:\/\/mustache.github.io\/\r\n  [6]: https:\/\/bloggercms.github.io\/images\/14284049925523bb002de49.png\r\n  [7]: https:\/\/bloggercms.github.io\/images\/14284049865523bafaea4be.png\r\n  [8]: https:\/\/bloggercms.github.io\/images\/14284049955523bb0381ec8.png\r\n  [9]: https:\/\/bloggercms.github.io\/images\/14284049985523bb06b28d7.png\r\n  [10]: https:\/\/bloggercms.github.io\/images\/14284050065523bb0e769a3.png\r\n  [11]: https:\/\/bloggercms.github.io\/images\/14284050035523bb0b5b371.png\r\n  [12]: https:\/\/bloggercms.github.io\/images\/14284049565523badca2571.png\r\n  [13]: https:\/\/bloggercms.github.io\/images\/14284049305523bac2f0d6c.png\r\n  [14]: https:\/\/bloggercms.github.io\/images\/14284049675523bae7ef288.png\r\n  [15]: https:\/\/bloggercms.github.io\/images\/14284049445523bad0ef14d.png\r\n  [16]: https:\/\/bloggercms.github.io\/images\/14284049615523bae133905.png\r\n  [17]: https:\/\/bloggercms.github.io\/page\/get-started.html\r\n  [18]: https:\/\/bloggercms.github.io\/images\/14284049645523bae48759c.png",
		"addpost": "addpost",
		"dated": "April 06, 2015 02:44 PM",
		"slug": "introducing-bloggercms",
		"status": "publised"
	},
	{
		"title": "How to Add Search Feature to Custom BloggerCMS Layouts",
		"tags": [
			"layout",
			"search"
		],
		"category": "Layouts",
		"body": "To add Search feature to your custom layout, create a search box and a button something like:\r\n\r\n    <input type=\"text\" class=\"searchQuery\" placeholder=\"Search Posts\">\r\n    <button type=\"button\" class=\"searchButton\">Submit<\/button>\r\n\r\nNow in your custom layout, copy **search.js** file from **default\/js** folder to your custom layout folder and include it in your layout by placing this code in your layout footer file:\r\n\r\n    <script>\r\n        var __blogURL = '{{settings.url}}';\r\n    <\/script>\r\n    \r\n    <script src=\"{{settings.url}}\/js\/search.js\"><\/script>\r\n\r\nOpen search.js file in some text editor and you will see it contains:\r\n\r\n    $(function () {\r\n    \r\n        \/\/\/\/\/\/\/\/\/\/\/\/\/\/ EDIT BELOW FOUR VARS \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\r\n        \/\/ class\/id\/selector of search keyword textbox\r\n        var $searchKeywordSelector = $('.searchQuery');\r\n        \/\/ class\/id\/selector of search button\r\n        var $searchButtonSelector = $('.searchButton');\r\n        \/\/ class\/id\/selector for element where results will show\r\n        var $searchResultsSelector = $('.main-content');\r\n        \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\r\n    \r\n        \/\/ now search for blog posts\r\n        $searchButtonSelector.click(function () {\r\n            var foundPosts = '';\r\n            var searchQuery = $.trim($searchKeywordSelector.val());\r\n            var queryRegex = new RegExp(searchQuery, \"ig\");\r\n    \r\n            \/\/ don't search if nothing specified\r\n            if (!searchQuery) {\r\n                return false;\r\n            }\r\n    \r\n            $.ajax({\r\n                url: __blogURL + \"\/data\/blog.json\",\r\n                type: \"GET\",\r\n                dataType: \"json\",\r\n                success: function (data) {\r\n                    $.each(data.posts, function (i, post) {\r\n                        var postBody = $(\"<div\/>\").html(post.body).text();\r\n    \r\n                        if (post.title.search(queryRegex) != -1 || postBody.search(queryRegex) != -1) {\r\n                            var slug = post.title.replace(\/[^a-zA-Z0-9\\\/_|+ -]\/, '');\r\n                            slug = $.trim(slug).toLowerCase();\r\n                            slug = slug.replace(\/\\s+\/g,' ');\r\n                            slug = slug.replace(\/\\W\/g, ' ');\r\n                            slug = slug.replace(\/\\s+\/g, '-');\r\n    \r\n                            if (slug) {\r\n                                foundPosts += '<h3><a href=\"' + data.settings.url + '\/post\/' + slug + '.html\">' + post.title + '<\/a><\/h3><hr>';\r\n                            }\r\n                        }\r\n                    });\r\n    \r\n                    if (foundPosts) {\r\n                        $searchResultsSelector.html('').html(foundPosts);\r\n                    }\r\n                    else {\r\n                        alert('No results found!');\r\n                    }\r\n                },\r\n                error: function (e) {\r\n                    console.log(\"error in searching...\");\r\n                }\r\n            });\r\n        });\r\n    \r\n        \/\/ on Enter keyboard button, click on search button\r\n        $searchKeywordSelector.keydown(function (event) {\r\n            if (event.keyCode == 13) {\r\n                $searchButtonSelector.click();\r\n            }\r\n        });\r\n    \r\n    });\r\n\r\nFinally you need to edit these variables:\r\n\r\n    \/\/\/\/\/\/\/\/\/\/\/\/\/\/ EDIT BELOW FOUR VARS \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\r\n    \/\/ class\/id\/selector of search keyword textbox\r\n    var $searchKeywordSelector = $('.searchQuery');\r\n    \/\/ class\/id\/selector of search button\r\n    var $searchButtonSelector = $('.searchButton');\r\n    \/\/ class\/id\/selector for element where results will show\r\n    var $searchResultsSelector = $('.main-content');\r\n    \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\r\n\r\n - `$searchKeywordSelector` should match your search input\/textbox selector\r\n - `$searchButtonSelector` should match selector of search button\r\n - `$searchResultsSelector` should match with element selector where you want to show search results\r\n\r\nIn above case, search textbox and button match these:\r\n\r\n    <input type=\"text\" class=\"searchQuery\" placeholder=\"Search Posts\">\r\n    <button type=\"button\" class=\"searchButton\">Submit<\/button>\r\n\r\nAnd for results element (`.main-content`), you could have for example:\r\n\r\n    <div class=\"main-content\">Search results will be shown here<\/div>\r\n\r\nOf course, you can give any class\/id\/attribute to your search input, button and results element but you should match them in above three variables.\r\n\r\n---\r\n\r\nFor technical part of it, you would notice in order to search, we trigger an ajax request and get all contents of json file present in **public\/data\/blog.json** file. Then we iterate over each post and compare title and body of each post with search query and for found results, we create links with titles.\r\n\r\nTherefore the **public\/data\/blog.json**  file must be present in order for search to work. This file is automatically generated by BloggerCMS.\r\n",
		"addpost": "addpost",
		"dated": "April 09, 2015 04:03 PM",
		"slug": "how-to-add-search-feature-to-custom-bloggercms-layouts",
		"status": "publised"
	}
]